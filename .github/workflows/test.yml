name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9']
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox

      - name: Ensure tox configuration exists
        run: |
          if [ ! -f tox.ini ] && [ ! -f setup.cfg ] && [ ! -f pyproject.toml ] && [ ! -f tox.toml ]; then
            echo "No tox configuration file found, creating a basic tox.ini."
            echo "[tox]" > tox.ini
            echo "envlist = py38, py39" >> tox.ini
            echo "[testenv]" >> tox.ini
            echo "deps = pytest" >> tox.ini
            echo "commands = pytest" >> tox.ini
          fi

      - name: Ensure requirements.txt exists
        run: |
          if [ ! -f requirements.txt ]; then
            echo "requirements.txt not found, creating an empty one."
            touch requirements.txt
          fi

      - name: Run tests
        run: tox

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine

      - name: Ensure requirements.txt exists
        run: |
          if [ ! -f requirements.txt ]; then
            echo "requirements.txt not found, creating an empty one."
            touch requirements.txt
          fi

      - name: Build and publish
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python setup.py sdist bdist_wheel
          twine upload dist/*
