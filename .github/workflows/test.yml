name: CI

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9"]
        include:
          - python-version: "3.8"
            toxenv: coverage,mypy,style,docs,dist-test
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: pip install ".[build]" tox
      - name: Install type stubs
        run: |
          pip install mypy
          pip install types-requests types-python-dateutil types-setuptools
      - name: Clean build directory
        run: python setup.py clean --all
      - name: Run tests
        run: tox
        env:
          TOXENV: ${{ matrix.toxenv }}
      - name: Run coveralls
        if: contains(matrix.toxenv, 'coverage')
        run: pip install coveralls && coveralls
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev'
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - name: Install dependencies
        run: pip install ".[build]"
      - name: Build and publish
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
          pip install build twine
          python -m build
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            twine upload --skip-existing dist/*
          elif [ "${{ github.ref }}" == "refs/heads/dev" ]; then
            twine upload --skip-existing dist/* --repository-url https://test.pypi.org/legacy/
          fi
