name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9"]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --no-deps -r requirements.txt
      - name: Run tests
        env:
          PYTHONWARNINGS: "ignore::DeprecationWarning"
        run: |
          if [ -f "Makefile" ]; then
            make ci
          else
            echo "Makefile not found, running default test command"
            pytest --maxfail=1 --disable-warnings || exit 1
          fi

  test-pypy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up PyPy
        uses: actions/setup-python@v2
        with:
          python-version: "pypy-3.8"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install termcolor==1.1.0 pytest==6.2.4 pytest-xdist==2.3.0
      - name: Run tests
        env:
          PYTHONWARNINGS: "ignore::DeprecationWarning"
        run: |
          pytest --maxfail=1 --disable-warnings || exit 1

  coverage:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --no-deps -r requirements.txt
      - name: Run coverage
        env:
          PYTHONWARNINGS: "ignore::DeprecationWarning"
        run: |
          if [ -f "Makefile" ]; then
            make coverage
          else
            echo "Makefile not found, running default coverage command"
            pytest --cov=. --maxfail=1 --disable-warnings || exit 1
          fi
      - name: Upload coverage to Codecov
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: bash <(curl -s https://codecov.io/bash)
